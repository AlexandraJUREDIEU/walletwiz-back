// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


/// Représente un utilisateur inscrit dans WalletWiz.
/// Peut créer des sessions ou être invité à en rejoindre.
/// Sert de base à l'authentification et aux relations avec les membres.
model Users {
  
  id                        String @id @default(cuid())                     /// ID unique de l'utilisateur (CUID).
  email                     String @unique                                  /// Adresse email de connexion (unique).
  password                  String                                          /// Mot de passe hashé.
  firstName                 String?                                         /// Prénom de l'utilisateur (optionnel).
  lastName                  String?                                         /// Nom de l'utilisateur (optionnel).
  status                    String?                                         /// Statut de compte (optionnel - ex : actif, désactivé).
  avatarUrl                 String?                                         /// URL de l’avatar utilisateur (optionnel).
  emailVerified             Boolean @default(false)                         /// Booléen indiquant si l’email a été vérifié.
  verificationCode          String?                                         /// Code de vérification envoyé par email (optionnel).
  verificationExpiresAt     DateTime?                                       /// Date d’expiration du code de vérification.
  resetToken                String? @unique                                 /// Token de réinitialisation du mot de passe (unique, optionnel).
  resetExpiresAt            DateTime?                                       /// Date d’expiration du token de réinitialisation.
  createdAt                 DateTime @default(now())                        /// Date de création du compte.
  updatedAt                 DateTime @updatedAt                             /// Date de dernière mise à jour du compte.

  /// Relations
  sessionsOwned             Session[] @relation("UserOwnedSessions")        /// Sessions créées par cet utilisateur.                              
}


/// Représente une session de gestion partagée dans WalletWiz.
/// Une session regroupe les comptes, revenus, dépenses, membres, etc.
/// Chaque session est créée par un utilisateur (owner).
model Session {

  id           String    @id @default(cuid())                                                 /// ID unique de la session.
  name         String?                                                                        /// Nom de la session (optionnel).
  ownerId      String                                                                         /// ID de l’utilisateur créateur de la session.
  createdAt    DateTime  @default(now())                                                      /// Date de création de la session.
  updatedAt    DateTime  @updatedAt                                                           /// Date de dernière mise à jour.

  /// Relations
  owner        Users      @relation("UserOwnedSessions", fields: [ownerId], references: [id])  /// Propriétaire de la session.
}